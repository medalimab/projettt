version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:3.8.0 # Version stable spécifique
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-network

  kafka:
    image: bitnami/kafka:3.5.1 # Version stable spécifique
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKAJS_NO_PARTITIONER_WARNING=1
    depends_on:
      - zookeeper
    networks:
      - kafka-network

  rental-service:
    build:
      context: ./rental-service
      dockerfile: Dockerfile
    ports:
      - "81:8000" # Changement du port exposé de 8000 à 81
    volumes:
      - ./rental-service:/var/www
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_KEY=base64:randomkey
      - KAFKA_BROKER=kafka:9092
      - DB_CONNECTION=mysql
      - DB_HOST=projettt-mysql-1
      - DB_PORT=3306
      - DB_DATABASE=rental_service
      - DB_USERNAME=root
      - DB_PASSWORD=password
    depends_on:
      - kafka
      - mysql
    networks:
      - kafka-network

  nodejs:
    build:
      context: ./car-service
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
      - "4000:4000" # Pour gRPC
    volumes:
      - ./car-service:/app
    environment:
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - kafka
    networks:
      - kafka-network

  mongodb:
    image: mongo:6.0.5 # Remplacement de 'latest' par une version stable spécifique
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    networks:
      - kafka-network

  mysql:
    image: mysql:8.0.33 # Version stable spécifique
    container_name: projettt-mysql-1
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: rental_service
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge

volumes:
  mongodata: